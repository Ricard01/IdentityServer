@use '@angular/material' as mat;
@use '../app-theme';
// @use '../custom/palette';
@use './../custom/palette';

$dark-palette-primary: (
    50 : #fafbff,
    100 : #f5f6ff,
    200 : #f0f1fb,
    300 : #e9eaf3,
    400 : #c7c8d1,
    500 : #a9aab3,
    600 : #7f8089,
    700 : #6b6c74,
    800 : #4b4c54,
    900 : #292a31,
    A100 : #ffffff,
    A200 : #d9d8ff,
    A400 : #a7a5ff,
    A700 : #8e8bff,
    contrast: (
      50: rgba(black, 0.87),
      100: rgba(black, 0.87),
      200: rgba(black, 0.87),
      300: rgba(black, 0.87),
      400: rgba(black, 0.87),
      500: white,
      600: white,
      700: white,
      800: white,
      900: white,
      A100: rgba(black, 0.87),
      A200: rgba(black, 0.87),
      A400: white,
      A700: white,
    )
);



$dark-palette-accent: (
  100: #bbe5ed,
  500: #38aec8,
  700: #2d8a9c,
  contrast: (
    100: #393939,
    500: #ffffff,
    700: #ffffff,
  ),
);


// https://material.angular.io/guide/theming
// Constructing the theme first requires defining your primary and accent palettes, with an optional warn palette.
// Dark theme

$dark-primary: mat.define-palette($dark-palette-primary);
// @debug "Error en : #{$dark-primary}";
$dark-accent: mat.define-palette($dark-palette-accent);
$dark-warn: mat.define-palette(mat.$orange-palette);

// You can construct a theme by calling either define-light-theme or define-dark-theme with the result from define-palette.
// The choice of a light versus a dark theme determines the background and foreground colors used throughout the components
$myDarkTheme: mat.define-dark-theme((
color: (
  primary: $dark-primary,
  accent:  $dark-accent,
  warn: $dark-warn
),
typography: mat.define-typography-config(),
density: 0));

$success: mat.define-palette(palette.$md-primary);
$info: mat.define-palette(palette.$md-primary, A200, A100, A400);

$dark-variants: (
  success: $success,
  info: $info,
);

// @include mat.all-component-themes($myDarkTheme);



@include app-theme.theme($myDarkTheme, $dark-variants);
